openapi: "3.0.2"
info:
    title: Social Media API
    version: "1.0"
    description: |
        Social media api adalah sebuah aplikasi yang digunakan untuk menyediakan
        data yang dibutuhkan oleh client.
servers:
    - url: http://localhost:8000/v1
tags:
    - name: User
    - name: Post
    - name: Comment
paths:
    # ------------------------------------------------
    # User Path
    # ------------------------------------------------
    /register:
        post:
            tags:
                - "User"
            summary: Register new user
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/user_request"
            responses:
                201:
                    description: Success register new user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success register account
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /login:
        post:
            tags:
                - "User"
            summary: Login user
            description: Login
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: alta@gmail.com
                                password:
                                    type: string
                                    format: password
                                    example: alta123
            responses:
                200:
                    description: Login success and return data user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/user_login_response"
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /search:
        get:
            tags:
                - "User"
            summary: Search user by name
            parameters:
                - name: name
                  in: query
                  required: false
                  schema:
                      type: string
            responses:
                200:
                    description: Success get user by name
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/user_response"
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /users/{id}:
        get:
            tags:
                - "User"
            summary: Get other user by id
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Success get user by id
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/user_response"
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /users:
        get:
            tags:
                - "User"
            summary: Get my profile
            security:
                - jwt_auth: []
            responses:
                200:
                    description: Get profile success and return data user
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/user_response"
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        put:
            tags:
                - "User"
            summary: Update my profile
            description: Update
            security:
                - jwt_auth: []
            requestBody:
                content:
                    application/form-data:
                        schema:
                            $ref: "#/components/schemas/user_update_request"
            responses:
                200:
                    description: Success update user data
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/user_response"
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        delete:
            tags:
                - "User"
            summary: Delete account
            description: Delete
            security:
                - jwt_auth: []
            responses:
                200:
                    description: Success delete user
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success delete user account
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /users/password:
        put:
            tags:
                - "User"
            summary: Update password
            security:
                - jwt_auth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                old_password:
                                    type: string
                                    format: password
                                    example: alta
                                new_password:
                                    type: string
                                    format: password
                                    example: golang
            responses:
                200:
                    description: Success update user data
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success update password
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    # ------------------------------------------------
    # Post Path
    # ------------------------------------------------
    /posts:
        post:
            tags:
                - "Post"
            summary: Add new post
            description: Add new post
            security:
                - jwt_auth: []

            requestBody:
                $ref: "#/components/requestBodies/post_request"
            responses:
                201:
                    description: Success create new post
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success add new post
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        get:
            tags:
                - "Post"
            summary: Get all my posts
            security:
                - jwt_auth: []
            responses:
                200:
                    description: Get post success and return data post
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/list_post_response"
                            example:
                                message: success get all posts
                                data:
                                    - id: 1
                                      caption: Jam segini masih nugas--
                                      image: image.jpg
                                      created_at: 15-01-2023
                                      updated_at: null
                                    - id: 2
                                      caption: Check this out!
                                      image: meme.jpg
                                      created_at: 15-01-2023
                                      updated_at: 16-01-2023
                400:
                    $ref: "#/components/responses/error_bad_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /posts/{post_id}:
        put:
            tags:
                - "Post"
            summary: Update my post
            description: Update my post
            security:
                - jwt_auth: []
            parameters:
                - name: post_id
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                $ref: "#/components/requestBodies/post_request"
            responses:
                200:
                    description: Success update post
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success update post
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        delete:
            tags:
                - "Post"
            summary: Delete my post
            security:
                - jwt_auth: []
            parameters:
                - name: post_id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: success delete my post
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: Success delete post data
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        get:
            tags:
                - "Post"
            summary: Get post by id post
            parameters:
                - name: post_id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Success get post by id
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/post_by_id_response"
                            example:
                                status: success get post
                                data:
                                    id: 1
                                    caption: Jam segini masih nugas--
                                    image: image.jpg
                                    author: john
                                    avatar: john.jpg
                                    created_at: 15-01-2023
                                    updated_at: null
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /posts/list/{user_id}:
        get:
            tags:
                - "Post"
            summary: Get post by id user
            parameters:
                - name: user_id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: Success get post by id
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/list_post_by_id_response"
                            example:
                                status: success get post
                                data:
                                    - id: 1
                                      caption: Jam segini masih nugas--
                                      image: image.jpg
                                      created_at: 15-01-2023
                                      updated_at: null
                                    - id: 2
                                      caption: Check this out!
                                      image: meme.jpg
                                      created_at: 15-01-2023
                                      updated_at: 16-01-2023
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
    /posts/list:
        get:
            tags:
                - "Post"
            summary: Get all post
            responses:
                200:
                    description: Get post success and return data post
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/list_post_response"
                            example:
                                message: success get all posts
                                data:
                                    - id: 1
                                      caption: Jam segini masih nugas--
                                      image: image.jpg
                                      author: john
                                      avatar: john.jpeg
                                      created_at: 15-01-2023
                                      updated_at: null
                                    - id: 2
                                      caption: Check this out!
                                      image: meme.jpg
                                      author: doe
                                      avatar: doe.jpeg
                                      created_at: 15-01-2023
                                      updated_at: 16-01-2023
                500:
                    $ref: "#/components/responses/error_internal_response"
    # ------------------------------------------------
    # Comment Path
    # ------------------------------------------------
    /comments:
        post:
            tags:
                - "Comment"
            summary: Add new comment on post
            security:
                - jwt_auth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                post_id:
                                    type: integer
                                    example: 1
                                user_id:
                                    type: integer
                                    example: 1
                                comment:
                                    type: string
                                    example: Iya juga!
            responses:
                201:
                    description: Success add comment
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: success add new comment
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
        get:
            tags:
                - "Comment"
            summary: Get all comment using post id
            parameters:
                - name: post_id
                  in: query
                  required: true
                  schema:
                      type: integer
                      example: 1
            responses:
                200:
                    description: Success get all comments
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/list_comment_response"
                            example:
                                message: success get all comments
                                data:
                                    - id: 1
                                      name: john
                                      comment: awesome!
                                      created_at: 16-01-2023
                                    - id: 2
                                      name: doe
                                      comment: how can??
                                      created_at: 16-01-2023
                400:
                    $ref: "#/components/responses/error_bad_response"
                404:
                    $ref: "#/components/responses/error_not_found_response"
                500:
                    $ref: "#/components/responses/error_internal_response"
components:
    securitySchemes:
        jwt_auth:
            type: http
            scheme: bearer
            bearerFormat: JWT
            description: "Use token for authorization"
    schemas:
        ## USER SCHEMAS
        user_request:
            type: object
            properties:
                first_name:
                    type: string
                    example: john
                last_name:
                    type: string
                    example: doe
                email:
                    type: string
                    format: email
                    example: alta@gmail.com
                password:
                    type: string
                    format: password
                    example: alta
        user_update_request:
            type: object
            properties:
                first_name:
                    type: string
                    example: john
                last_name:
                    type: string
                    example: doe
                email:
                    type: string
                    format: email
                    example: alta@gmail.com
                avatar:
                    type: string
                    format: binary
        user_login_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: object
                    properties:
                        token:
                            type: string
                        user:
                            type: object
                            properties:
                                first_name:
                                    type: string
                                last_name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                avatar:
                                    type: string
                                    example: avatar.jpg
        user_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: object
                    properties:
                        id:
                            type: integer
                            example: 2
                        first_name:
                            type: string
                            example: john
                        last_name:
                            type: string
                            example: doe
                        email:
                            type: string
                            format: email
                            example: alta@gmail.com
                        avatar:
                            type: string
                            example: avatar.jpg
        # POST SCHEMAS
        post_by_id_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: object
                    properties:
                        id:
                            type: integer
                        caption:
                            type: string
                        image:
                            type: string
                        author:
                            type: string
                        avatar:
                            type: string
                        created_at:
                            type: string
                        updated_at:
                            type: string
        list_post_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            caption:
                                type: string
                            image:
                                type: string
                            author:
                                type: string
                            avatar:
                                type: string
                            created_at:
                                type: string
                            updated_at:
                                type: string
        list_post_by_id_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            caption:
                                type: string
                            image:
                                type: string
                            created_at:
                                type: string
                            updated_at:
                                type: string
        # COMMENT SCHEMAS
        list_comment_response:
            type: object
            properties:
                message:
                    type: string
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            first_name:
                                type: string
                            comment:
                                type: string
                            created_at:
                                type: string
    requestBodies:
        # POST REQUEST
        post_request:
            content:
                multipart/form-data:
                    schema:
                        type: object
                        properties:
                            caption:
                                type: string
                                example: "Capek one piece ga tamat-tamat"
                            image:
                                type: string
                                format: binary
    responses:
        ## ERROR RESPONSE
        error_bad_response:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                example: bad request
        error_not_found_response:
            description: Not found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                example: data not found
        error_internal_response:
            description: Internal server error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                example: server error
